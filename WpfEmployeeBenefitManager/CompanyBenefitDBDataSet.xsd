<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CompanyBenefitDBDataSet" targetNamespace="http://tempuri.org/CompanyBenefitDBDataSet.xsd" xmlns:mstns="http://tempuri.org/CompanyBenefitDBDataSet.xsd" xmlns="http://tempuri.org/CompanyBenefitDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CompanyBenefitDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CompanyBenefitDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WpfEmployeeBenefitManager.Properties.Settings.GlobalReference.Default.CompanyBenefitDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeeTableAdapter" GeneratorDataComponentClassName="EmployeeTableAdapter" Name="Employee" UserDataComponentName="EmployeeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CompanyBenefitDBConnectionString (Settings)" DbObjectName="CompanyBenefitDB.dbo.Employee" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Employee] ([NameAndSurname]) VALUES (@NameAndSurname)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameAndSurname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameAndSurname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT NameAndSurname FROM dbo.Employee</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NameAndSurname" DataSetColumn="NameAndSurname" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BenefitTableAdapter" GeneratorDataComponentClassName="BenefitTableAdapter" Name="Benefit" UserDataComponentName="BenefitTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CompanyBenefitDBConnectionString (Settings)" DbObjectName="CompanyBenefitDB.dbo.Benefit" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Benefit] WHERE (([Id] = @Original_Id) AND ([BenefitName] = @Original_BenefitName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BenefitName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BenefitName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Benefit] ([BenefitName]) VALUES (@BenefitName);
SELECT Id, BenefitName FROM Benefit WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BenefitName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BenefitName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, BenefitName FROM dbo.Benefit</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Benefit] SET [BenefitName] = @BenefitName WHERE (([Id] = @Original_Id) AND ([BenefitName] = @Original_BenefitName));
SELECT Id, BenefitName FROM Benefit WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BenefitName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BenefitName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BenefitName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BenefitName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="CompanyBenefitDB.dbo.Benefit" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="BenefitName" DataSetColumn="BenefitName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeeBenefitTableAdapter" GeneratorDataComponentClassName="EmployeeBenefitTableAdapter" Name="EmployeeBenefit" UserDataComponentName="EmployeeBenefitTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CompanyBenefitDBConnectionString (Settings)" DbObjectName="CompanyBenefitDB.dbo.EmployeeBenefit" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[EmployeeBenefit] WHERE (([Id] = @Original_Id) AND ([EmployeeId] = @Original_EmployeeId) AND ([BenefitId] = @Original_BenefitId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BenefitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BenefitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[EmployeeBenefit] ([EmployeeId], [BenefitId]) VALUES (@EmployeeId, @BenefitId);
SELECT Id, EmployeeId, BenefitId FROM EmployeeBenefit WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BenefitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BenefitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, EmployeeId, BenefitId FROM dbo.EmployeeBenefit</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[EmployeeBenefit] SET [EmployeeId] = @EmployeeId, [BenefitId] = @BenefitId WHERE (([Id] = @Original_Id) AND ([EmployeeId] = @Original_EmployeeId) AND ([BenefitId] = @Original_BenefitId));
SELECT Id, EmployeeId, BenefitId FROM EmployeeBenefit WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BenefitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BenefitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BenefitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BenefitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="CompanyBenefitDB.dbo.EmployeeBenefit" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="EmployeeId" DataSetColumn="EmployeeId" />
              <Mapping SourceColumn="BenefitId" DataSetColumn="BenefitId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CompanyBenefitDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="CompanyBenefitDBDataSet" msprop:Generator_UserDSName="CompanyBenefitDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Employee" msprop:Generator_TableClassName="EmployeeDataTable" msprop:Generator_TableVarName="tableEmployee" msprop:Generator_RowChangedName="EmployeeRowChanged" msprop:Generator_TablePropName="Employee" msprop:Generator_RowDeletingName="EmployeeRowDeleting" msprop:Generator_RowChangingName="EmployeeRowChanging" msprop:Generator_RowEvHandlerName="EmployeeRowChangeEventHandler" msprop:Generator_RowDeletedName="EmployeeRowDeleted" msprop:Generator_RowClassName="EmployeeRow" msprop:Generator_UserTableName="Employee" msprop:Generator_RowEvArgName="EmployeeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NameAndSurname" msprop:Generator_ColumnVarNameInTable="columnNameAndSurname" msprop:Generator_ColumnPropNameInRow="NameAndSurname" msprop:Generator_ColumnPropNameInTable="NameAndSurnameColumn" msprop:Generator_UserColumnName="NameAndSurname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Benefit" msprop:Generator_TableClassName="BenefitDataTable" msprop:Generator_TableVarName="tableBenefit" msprop:Generator_TablePropName="Benefit" msprop:Generator_RowDeletingName="BenefitRowDeleting" msprop:Generator_RowChangingName="BenefitRowChanging" msprop:Generator_RowEvHandlerName="BenefitRowChangeEventHandler" msprop:Generator_RowDeletedName="BenefitRowDeleted" msprop:Generator_UserTableName="Benefit" msprop:Generator_RowChangedName="BenefitRowChanged" msprop:Generator_RowEvArgName="BenefitRowChangeEvent" msprop:Generator_RowClassName="BenefitRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="BenefitName" msprop:Generator_ColumnVarNameInTable="columnBenefitName" msprop:Generator_ColumnPropNameInRow="BenefitName" msprop:Generator_ColumnPropNameInTable="BenefitNameColumn" msprop:Generator_UserColumnName="BenefitName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EmployeeBenefit" msprop:Generator_TableClassName="EmployeeBenefitDataTable" msprop:Generator_TableVarName="tableEmployeeBenefit" msprop:Generator_TablePropName="EmployeeBenefit" msprop:Generator_RowDeletingName="EmployeeBenefitRowDeleting" msprop:Generator_RowChangingName="EmployeeBenefitRowChanging" msprop:Generator_RowEvHandlerName="EmployeeBenefitRowChangeEventHandler" msprop:Generator_RowDeletedName="EmployeeBenefitRowDeleted" msprop:Generator_UserTableName="EmployeeBenefit" msprop:Generator_RowChangedName="EmployeeBenefitRowChanged" msprop:Generator_RowEvArgName="EmployeeBenefitRowChangeEvent" msprop:Generator_RowClassName="EmployeeBenefitRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="EmployeeId" msprop:Generator_ColumnVarNameInTable="columnEmployeeId" msprop:Generator_ColumnPropNameInRow="EmployeeId" msprop:Generator_ColumnPropNameInTable="EmployeeIdColumn" msprop:Generator_UserColumnName="EmployeeId" type="xs:int" />
              <xs:element name="BenefitId" msprop:Generator_ColumnVarNameInTable="columnBenefitId" msprop:Generator_ColumnPropNameInRow="BenefitId" msprop:Generator_ColumnPropNameInTable="BenefitIdColumn" msprop:Generator_UserColumnName="BenefitId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Benefit" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="EmployeeBenefit_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EmployeeBenefit" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>